@model tmatsol_dump.Models.Compliant

@{
    ViewBag.Title = "Complaint";
}

<h2>Complaint</h2>

@using (Html.BeginForm("Complaint","Home",FormMethod.Post, new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="d-flex justify-content-around ml-auto">
            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.companyName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.companyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.companyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emailAddress, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.softwareName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.softwareName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.softwareName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.mobileNumber, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.mobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.mobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div>
                <div class="form-group">
                    @Html.LabelFor(model => model.landLineNumber, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.landLineNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.landLineNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contactPersonName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.contactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contactPersonName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ComplaintText, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextAreaFor(model => model.ComplaintText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ComplaintText, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.File, new { type = "file", htmlAttributes = new { @class = "form-control",
                       /*accept = "application/pdf, video/mp4, image/x-png, image/jpeg, image/jpg",*/
                       @multiple="multiple" } })
                        @Html.ValidationMessageFor(model => model.ComplaintText, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>    
        </div>
        
        <div class="form-group">
            <center class="">
                <input type="submit" value="Submit" class="btn btn-lg btn-outline-success" />
            </center>
        </div>
    </div>
}

